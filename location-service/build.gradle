buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
        gradleDockerVersion   = "1.2"
	}
	repositories {
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
        classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.5'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

group = 'com.odenktools'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
	springCloudServicesVersion = '1.6.1.RELEASE'
	springCloudVersion = 'Edgware.SR2'
}

docker {
    baseImage "openjdk:8-jre-alpine"
    maintainer 'Odenktools "odenktools86@gmail.com"'
}

task buildDocker(type: Docker) {
    push = false
    tag = "${project.group}/${applicationName}"
    addFile {
        from "${project.buildDir}/libs"
        into '/usr/src/account-service/'
    }
    workingDir('/usr/src/account-service')
    defaultCommand(['java', '-jar', 'account-service-0.0.1-SNAPSHOT.jar'])
    exposePort(8080)
}

buildDocker.dependsOn(build)

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-parent:Brixton.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")

    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:1.4.3.RELEASE')
	
	compile('org.springframework.cloud:spring-cloud-starter-config')
    compile("org.springframework.retry:spring-retry")
    compile("org.flywaydb:flyway-core")
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
